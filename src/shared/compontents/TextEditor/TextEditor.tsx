'use client';
import { stateToHTML } from 'draft-js-export-html';
import React from 'react';
import { ContentState, convertFromHTML, Editor, EditorState, RichUtils } from 'draft-js';
import 'draft-js/dist/Draft.css';
import { Controller, Control } from 'react-hook-form';

type Props = {
  name: string;
  control: Control<any>;
  placeholder?: string;
  valueText: any,
  OnChangeText: (text: string) => void;
  description?: any
};

const TextEditor: React.FC<Props> = ({ name, control, placeholder, valueText, OnChangeText}) => {
  const blockStyleFn = (contentBlock: any) => {
    const type = contentBlock.getType();
    if (type === 'center') return 'text-align-center';
    if (type === 'right') return 'text-align-right';
    if (type === 'left') return 'text-align-left';
    if (type === 'justify') return 'text-align-justify';
    return '';
  };

  const [editorState, setEditorState] = React.useState<EditorState>(() => {
  if (valueText) {
    return EditorState.createWithContent(
      ContentState.createFromBlockArray(
        // @ts-expect-error
        convertFromHTML(valueText)
      )
    );
  }
  return EditorState.createEmpty();
});

  const toggleInlineStyle = (style: string, editorState: EditorState, onChange: (val: EditorState) => void) => {
    onChange(RichUtils.toggleInlineStyle(editorState, style));
  };

  const toggleBlockType = (blockType: string, editorState: EditorState, onChange: (val: EditorState) => void) => {
    onChange(RichUtils.toggleBlockType(editorState, blockType));
  };

  return (
    <Controller
      name={name}
      control={control}
      rules={{
        validate: (val) => val?.getCurrentContent().getPlainText().trim().length > 0 || 'Описание обязательно',
      }}
      render={({ fieldState }) => {


        const handleKeyCommand = (command: string, editorState: EditorState) => {
          const newState = RichUtils.handleKeyCommand(editorState, command);
          if (newState) {
            
            return 'handled';
          }
          return 'not-handled';
        };

      const handleChange = (state: EditorState) => {
        setEditorState(state);
        const contentState = state.getCurrentContent();
        const html = stateToHTML(contentState);
        OnChangeText(html);
      };

        return (
          <div className="border border-gray-300 rounded-md">
            <div className="bg-[#E8E5F9] px-4 py-2 flex gap-2 items-center text-gray-800 text-sm">
              <button type="button" onClick={() => toggleInlineStyle('BOLD', editorState, handleChange)}>
                <svg width="11" height="14" viewBox="0 0 11 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M8.31875 6.03906C8.81242 5.56386 9.15281 4.95195 9.29622 4.2819C9.43962 3.61184 9.3795 2.91422 9.12356 2.27858C8.86763 1.64295 8.42756 1.0983 7.85986 0.714572C7.29216 0.33084 6.62273 0.125531 5.9375 0.125H0.625C0.45924 0.125 0.300269 0.190848 0.183058 0.308058C0.0658481 0.425269 0 0.58424 0 0.75V12.625C0 12.7908 0.0658481 12.9497 0.183058 13.0669C0.300269 13.1842 0.45924 13.25 0.625 13.25H6.875C7.74178 13.25 8.58179 12.9497 9.25216 12.4003C9.92253 11.8508 10.3819 11.0861 10.552 10.2362C10.7222 9.38629 10.5927 8.50368 10.1855 7.73849C9.77837 6.97329 9.11871 6.37277 8.31875 6.03906ZM1.25 1.375H5.9375C6.51766 1.375 7.07406 1.60547 7.4843 2.0157C7.89453 2.42594 8.125 2.98234 8.125 3.5625C8.125 4.14266 7.89453 4.69906 7.4843 5.1093C7.07406 5.51953 6.51766 5.75 5.9375 5.75H1.25V1.375ZM6.875 12H1.25V7H6.875C7.53804 7 8.17393 7.26339 8.64277 7.73223C9.11161 8.20107 9.375 8.83696 9.375 9.5C9.375 10.163 9.11161 10.7989 8.64277 11.2678C8.17393 11.7366 7.53804 12 6.875 12Z" fill="#101010"/>
                </svg>
              </button>
              <button type="button" onClick={() => toggleInlineStyle('ITALIC', editorState, handleChange)}><svg width="12" height="14" viewBox="0 0 12 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M11.625 1.375C11.625 1.54076 11.5592 1.69973 11.4419 1.81694C11.3247 1.93415 11.1658 2 11 2H8.32578L4.99219 12H7.25C7.41576 12 7.57473 12.0658 7.69194 12.1831C7.80915 12.3003 7.875 12.4592 7.875 12.625C7.875 12.7908 7.80915 12.9497 7.69194 13.0669C7.57473 13.1842 7.41576 13.25 7.25 13.25H1C0.83424 13.25 0.675269 13.1842 0.558058 13.0669C0.440848 12.9497 0.375 12.7908 0.375 12.625C0.375 12.4592 0.440848 12.3003 0.558058 12.1831C0.675269 12.0658 0.83424 12 1 12H3.67422L7.00781 2H4.75C4.58424 2 4.42527 1.93415 4.30806 1.81694C4.19085 1.69973 4.125 1.54076 4.125 1.375C4.125 1.20924 4.19085 1.05027 4.30806 0.933058C4.42527 0.815848 4.58424 0.75 4.75 0.75H11C11.1658 0.75 11.3247 0.815848 11.4419 0.933058C11.5592 1.05027 11.625 1.20924 11.625 1.375Z" fill="#101010"/>
                </svg>
              </button>
              <button type="button" onClick={() => toggleInlineStyle('UNDERLINE', editorState, handleChange)}><svg width="12" height="16" viewBox="0 0 12 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M11.625 14.5C11.625 14.6658 11.5592 14.8247 11.4419 14.9419C11.3247 15.0592 11.1658 15.125 11 15.125H1C0.83424 15.125 0.675269 15.0592 0.558058 14.9419C0.440848 14.8247 0.375 14.6658 0.375 14.5C0.375 14.3342 0.440848 14.1753 0.558058 14.0581C0.675269 13.9408 0.83424 13.875 1 13.875H11C11.1658 13.875 11.3247 13.9408 11.4419 14.0581C11.5592 14.1753 11.625 14.3342 11.625 14.5ZM6 12.625C7.32564 12.6236 8.59657 12.0963 9.53394 11.1589C10.4713 10.2216 10.9986 8.95064 11 7.625V1.375C11 1.20924 10.9342 1.05027 10.8169 0.933058C10.6997 0.815848 10.5408 0.75 10.375 0.75C10.2092 0.75 10.0503 0.815848 9.93306 0.933058C9.81585 1.05027 9.75 1.20924 9.75 1.375V7.625C9.75 8.61956 9.35491 9.57339 8.65165 10.2767C7.94839 10.9799 6.99456 11.375 6 11.375C5.00544 11.375 4.05161 10.9799 3.34835 10.2767C2.64509 9.57339 2.25 8.61956 2.25 7.625V1.375C2.25 1.20924 2.18415 1.05027 2.06694 0.933058C1.94973 0.815848 1.79076 0.75 1.625 0.75C1.45924 0.75 1.30027 0.815848 1.18306 0.933058C1.06585 1.05027 1 1.20924 1 1.375V7.625C1.00145 8.95064 1.5287 10.2216 2.46606 11.1589C3.40343 12.0963 4.67436 12.6236 6 12.625Z" fill="#101010"/>
</svg>
</button>
              <button type="button" onClick={() => toggleBlockType('unordered-list-item', editorState, handleChange)}><svg width="16" height="14" viewBox="0 0 16 14" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M15.5 7C15.5 7.16576 15.4342 7.32473 15.3169 7.44194C15.1997 7.55915 15.0408 7.625 14.875 7.625H11.7445C12.4625 8.18047 13 8.96875 13 10.125C13 11.1672 12.4531 12.1328 11.457 12.843C10.5258 13.5086 9.29766 13.875 8 13.875C6.70234 13.875 5.47422 13.5086 4.54297 12.843C3.54688 12.1328 3 11.1672 3 10.125C3 9.95924 3.06585 9.80027 3.18306 9.68306C3.30027 9.56585 3.45924 9.5 3.625 9.5C3.79076 9.5 3.94973 9.56585 4.06694 9.68306C4.18415 9.80027 4.25 9.95924 4.25 10.125C4.25 11.4805 5.96875 12.625 8 12.625C10.0312 12.625 11.75 11.4805 11.75 10.125C11.75 8.96484 10.9266 8.28281 8.72109 7.625H1.125C0.95924 7.625 0.800269 7.55915 0.683058 7.44194C0.565848 7.32473 0.5 7.16576 0.5 7C0.5 6.83424 0.565848 6.67527 0.683058 6.55806C0.800269 6.44085 0.95924 6.375 1.125 6.375H14.875C15.0408 6.375 15.1997 6.44085 15.3169 6.55806C15.4342 6.67527 15.5 6.83424 15.5 7ZM3.96328 5.125C4.06209 5.12509 4.1595 5.10176 4.24754 5.05691C4.33558 5.01206 4.41174 4.94698 4.46976 4.867C4.52777 4.78703 4.566 4.69444 4.58131 4.59683C4.59662 4.49922 4.58857 4.39937 4.55781 4.30547C4.51308 4.16643 4.49118 4.02105 4.49297 3.875C4.49297 2.45 6.00078 1.375 8 1.375C9.47188 1.375 10.6687 1.95469 11.2031 2.92578C11.2875 3.06177 11.4209 3.1602 11.5758 3.20076C11.7306 3.24132 11.8951 3.22093 12.0353 3.14379C12.1756 3.06666 12.2809 2.93865 12.3296 2.78617C12.3782 2.63368 12.3665 2.46834 12.2969 2.32422C11.5414 0.946875 9.93516 0.125 8 0.125C5.28828 0.125 3.24297 1.73672 3.24297 3.875C3.24164 4.15314 3.28436 4.42975 3.36953 4.69453C3.41052 4.81969 3.49001 4.9287 3.59663 5.00601C3.70326 5.08331 3.83158 5.12496 3.96328 5.125Z" fill="#101010"/>
</svg>
</button>
              <button type="button" className={'ml-[24px]'} onClick={() => toggleBlockType('left', editorState, handleChange)}><svg width="16" height="11" viewBox="0 0 16 11" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M0.5 1C0.5 0.83424 0.565848 0.675269 0.683058 0.558058C0.800269 0.440848 0.95924 0.375 1.125 0.375H14.875C15.0408 0.375 15.1997 0.440848 15.3169 0.558058C15.4342 0.675269 15.5 0.83424 15.5 1C15.5 1.16576 15.4342 1.32473 15.3169 1.44194C15.1997 1.55915 15.0408 1.625 14.875 1.625H1.125C0.95924 1.625 0.800269 1.55915 0.683058 1.44194C0.565848 1.32473 0.5 1.16576 0.5 1ZM1.125 4.75H11.125C11.2908 4.75 11.4497 4.68415 11.5669 4.56694C11.6842 4.44973 11.75 4.29076 11.75 4.125C11.75 3.95924 11.6842 3.80027 11.5669 3.68306C11.4497 3.56585 11.2908 3.5 11.125 3.5H1.125C0.95924 3.5 0.800269 3.56585 0.683058 3.68306C0.565848 3.80027 0.5 3.95924 0.5 4.125C0.5 4.29076 0.565848 4.44973 0.683058 4.56694C0.800269 4.68415 0.95924 4.75 1.125 4.75ZM14.875 6.625H1.125C0.95924 6.625 0.800269 6.69085 0.683058 6.80806C0.565848 6.92527 0.5 7.08424 0.5 7.25C0.5 7.41576 0.565848 7.57473 0.683058 7.69194C0.800269 7.80915 0.95924 7.875 1.125 7.875H14.875C15.0408 7.875 15.1997 7.80915 15.3169 7.69194C15.4342 7.57473 15.5 7.41576 15.5 7.25C15.5 7.08424 15.4342 6.92527 15.3169 6.80806C15.1997 6.69085 15.0408 6.625 14.875 6.625ZM11.125 9.75H1.125C0.95924 9.75 0.800269 9.81585 0.683058 9.93306C0.565848 10.0503 0.5 10.2092 0.5 10.375C0.5 10.5408 0.565848 10.6997 0.683058 10.8169C0.800269 10.9342 0.95924 11 1.125 11H11.125C11.2908 11 11.4497 10.9342 11.5669 10.8169C11.6842 10.6997 11.75 10.5408 11.75 10.375C11.75 10.2092 11.6842 10.0503 11.5669 9.93306C11.4497 9.81585 11.2908 9.75 11.125 9.75Z" fill="#101010"/>
</svg>
</button>
              <button type="button" onClick={() => toggleBlockType('center', editorState, handleChange)}><svg width="16" height="11" viewBox="0 0 16 11" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M0.5 1C0.5 0.83424 0.565848 0.675269 0.683058 0.558058C0.800269 0.440848 0.95924 0.375 1.125 0.375H14.875C15.0408 0.375 15.1997 0.440848 15.3169 0.558058C15.4342 0.675269 15.5 0.83424 15.5 1C15.5 1.16576 15.4342 1.32473 15.3169 1.44194C15.1997 1.55915 15.0408 1.625 14.875 1.625H1.125C0.95924 1.625 0.800269 1.55915 0.683058 1.44194C0.565848 1.32473 0.5 1.16576 0.5 1ZM3 3.5C2.83424 3.5 2.67527 3.56585 2.55806 3.68306C2.44085 3.80027 2.375 3.95924 2.375 4.125C2.375 4.29076 2.44085 4.44973 2.55806 4.56694C2.67527 4.68415 2.83424 4.75 3 4.75H13C13.1658 4.75 13.3247 4.68415 13.4419 4.56694C13.5592 4.44973 13.625 4.29076 13.625 4.125C13.625 3.95924 13.5592 3.80027 13.4419 3.68306C13.3247 3.56585 13.1658 3.5 13 3.5H3ZM14.875 6.625H1.125C0.95924 6.625 0.800269 6.69085 0.683058 6.80806C0.565848 6.92527 0.5 7.08424 0.5 7.25C0.5 7.41576 0.565848 7.57473 0.683058 7.69194C0.800269 7.80915 0.95924 7.875 1.125 7.875H14.875C15.0408 7.875 15.1997 7.80915 15.3169 7.69194C15.4342 7.57473 15.5 7.41576 15.5 7.25C15.5 7.08424 15.4342 6.92527 15.3169 6.80806C15.1997 6.69085 15.0408 6.625 14.875 6.625ZM13 9.75H3C2.83424 9.75 2.67527 9.81585 2.55806 9.93306C2.44085 10.0503 2.375 10.2092 2.375 10.375C2.375 10.5408 2.44085 10.6997 2.55806 10.8169C2.67527 10.9342 2.83424 11 3 11H13C13.1658 11 13.3247 10.9342 13.4419 10.8169C13.5592 10.6997 13.625 10.5408 13.625 10.375C13.625 10.2092 13.5592 10.0503 13.4419 9.93306C13.3247 9.81585 13.1658 9.75 13 9.75Z" fill="#101010"/>
</svg>
</button>
              <button type="button" onClick={() => toggleBlockType('right', editorState, handleChange)}><svg width="16" height="11" viewBox="0 0 16 11" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M0.5 1C0.5 0.83424 0.565848 0.675269 0.683058 0.558058C0.800269 0.440848 0.95924 0.375 1.125 0.375H14.875C15.0408 0.375 15.1997 0.440848 15.3169 0.558058C15.4342 0.675269 15.5 0.83424 15.5 1C15.5 1.16576 15.4342 1.32473 15.3169 1.44194C15.1997 1.55915 15.0408 1.625 14.875 1.625H1.125C0.95924 1.625 0.800269 1.55915 0.683058 1.44194C0.565848 1.32473 0.5 1.16576 0.5 1ZM14.875 3.5H4.875C4.70924 3.5 4.55027 3.56585 4.43306 3.68306C4.31585 3.80027 4.25 3.95924 4.25 4.125C4.25 4.29076 4.31585 4.44973 4.43306 4.56694C4.55027 4.68415 4.70924 4.75 4.875 4.75H14.875C15.0408 4.75 15.1997 4.68415 15.3169 4.56694C15.4342 4.44973 15.5 4.29076 15.5 4.125C15.5 3.95924 15.4342 3.80027 15.3169 3.68306C15.1997 3.56585 15.0408 3.5 14.875 3.5ZM14.875 6.625H1.125C0.95924 6.625 0.800269 6.69085 0.683058 6.80806C0.565848 6.92527 0.5 7.08424 0.5 7.25C0.5 7.41576 0.565848 7.57473 0.683058 7.69194C0.800269 7.80915 0.95924 7.875 1.125 7.875H14.875C15.0408 7.875 15.1997 7.80915 15.3169 7.69194C15.4342 7.57473 15.5 7.41576 15.5 7.25C15.5 7.08424 15.4342 6.92527 15.3169 6.80806C15.1997 6.69085 15.0408 6.625 14.875 6.625ZM14.875 9.75H4.875C4.70924 9.75 4.55027 9.81585 4.43306 9.93306C4.31585 10.0503 4.25 10.2092 4.25 10.375C4.25 10.5408 4.31585 10.6997 4.43306 10.8169C4.55027 10.9342 4.70924 11 4.875 11H14.875C15.0408 11 15.1997 10.9342 15.3169 10.8169C15.4342 10.6997 15.5 10.5408 15.5 10.375C15.5 10.2092 15.4342 10.0503 15.3169 9.93306C15.1997 9.81585 15.0408 9.75 14.875 9.75Z" fill="#101010"/>
</svg>
</button>
              <button type="button" onClick={() => toggleBlockType('justify', editorState, handleChange)}><svg width="16" height="11" viewBox="0 0 16 11" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M0.5 1C0.5 0.83424 0.565848 0.675269 0.683058 0.558058C0.800269 0.440848 0.95924 0.375 1.125 0.375H14.875C15.0408 0.375 15.1997 0.440848 15.3169 0.558058C15.4342 0.675269 15.5 0.83424 15.5 1C15.5 1.16576 15.4342 1.32473 15.3169 1.44194C15.1997 1.55915 15.0408 1.625 14.875 1.625H1.125C0.95924 1.625 0.800269 1.55915 0.683058 1.44194C0.565848 1.32473 0.5 1.16576 0.5 1ZM14.875 3.5H1.125C0.95924 3.5 0.800269 3.56585 0.683058 3.68306C0.565848 3.80027 0.5 3.95924 0.5 4.125C0.5 4.29076 0.565848 4.44973 0.683058 4.56694C0.800269 4.68415 0.95924 4.75 1.125 4.75H14.875C15.0408 4.75 15.1997 4.68415 15.3169 4.56694C15.4342 4.44973 15.5 4.29076 15.5 4.125C15.5 3.95924 15.4342 3.80027 15.3169 3.68306C15.1997 3.56585 15.0408 3.5 14.875 3.5ZM14.875 6.625H1.125C0.95924 6.625 0.800269 6.69085 0.683058 6.80806C0.565848 6.92527 0.5 7.08424 0.5 7.25C0.5 7.41576 0.565848 7.57473 0.683058 7.69194C0.800269 7.80915 0.95924 7.875 1.125 7.875H14.875C15.0408 7.875 15.1997 7.80915 15.3169 7.69194C15.4342 7.57473 15.5 7.41576 15.5 7.25C15.5 7.08424 15.4342 6.92527 15.3169 6.80806C15.1997 6.69085 15.0408 6.625 14.875 6.625ZM14.875 9.75H1.125C0.95924 9.75 0.800269 9.81585 0.683058 9.93306C0.565848 10.0503 0.5 10.2092 0.5 10.375C0.5 10.5408 0.565848 10.6997 0.683058 10.8169C0.800269 10.9342 0.95924 11 1.125 11H14.875C15.0408 11 15.1997 10.9342 15.3169 10.8169C15.4342 10.6997 15.5 10.5408 15.5 10.375C15.5 10.2092 15.4342 10.0503 15.3169 9.93306C15.1997 9.81585 15.0408 9.75 14.875 9.75Z" fill="#101010"/>
</svg>
</button>
            </div>

            <div className="p-4 min-h-[150px]">
              <Editor
                editorState={editorState}
                onChange={handleChange}
                handleKeyCommand={handleKeyCommand}
                blockStyleFn={blockStyleFn}
                placeholder={placeholder}
              />
            </div>

            {fieldState.error && (
              <p className="text-red-600 text-sm px-4 pt-1">{fieldState.error.message}</p>
            )}
          </div>
        );
      }}
    />
  );
};

export default TextEditor;
